//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use sea_orm::entity::prelude::*;

#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "challengetype")]
pub enum Challengetype {
    #[sea_orm(string_value = "aggregate")]
    Aggregate,
    #[sea_orm(string_value = "boolean")]
    Boolean,
    #[sea_orm(string_value = "numeric")]
    Numeric,
    #[sea_orm(string_value = "trending")]
    Trending,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "delist_entity")]
pub enum DelistEntity {
    #[sea_orm(string_value = "TRACKS")]
    Tracks,
    #[sea_orm(string_value = "USERS")]
    Users,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "delist_track_reason"
)]
pub enum DelistTrackReason {
    #[sea_orm(string_value = "ACR")]
    Acr,
    #[sea_orm(string_value = "DMCA")]
    Dmca,
    #[sea_orm(string_value = "MANUAL")]
    Manual,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "delist_user_reason")]
pub enum DelistUserReason {
    #[sea_orm(string_value = "COPYRIGHT_SCHOOL")]
    CopyrightSchool,
    #[sea_orm(string_value = "MANUAL")]
    Manual,
    #[sea_orm(string_value = "STRIKE_THRESHOLD")]
    StrikeThreshold,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "reposttype")]
pub enum Reposttype {
    #[sea_orm(string_value = "album")]
    Album,
    #[sea_orm(string_value = "playlist")]
    Playlist,
    #[sea_orm(string_value = "track")]
    Track,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "savetype")]
pub enum Savetype {
    #[sea_orm(string_value = "album")]
    Album,
    #[sea_orm(string_value = "playlist")]
    Playlist,
    #[sea_orm(string_value = "track")]
    Track,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(
    rs_type = "String",
    db_type = "Enum",
    enum_name = "skippedtransactionlevel"
)]
pub enum Skippedtransactionlevel {
    #[sea_orm(string_value = "network")]
    Network,
    #[sea_orm(string_value = "node")]
    Node,
}
#[derive(Debug, Clone, PartialEq, Eq, EnumIter, DeriveActiveEnum)]
#[sea_orm(rs_type = "String", db_type = "Enum", enum_name = "wallet_chain")]
pub enum WalletChain {
    #[sea_orm(string_value = "eth")]
    Eth,
    #[sea_orm(string_value = "sol")]
    Sol,
}
