/*
 * API
 *
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */

use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct UserReplicaSet {
    #[serde(rename = "user_id")]
    pub user_id: i32,
    #[serde(rename = "wallet")]
    pub wallet: String,
    #[serde(rename = "primary", skip_serializing_if = "Option::is_none")]
    pub primary: Option<String>,
    #[serde(rename = "secondary1", skip_serializing_if = "Option::is_none")]
    pub secondary1: Option<String>,
    #[serde(rename = "secondary2", skip_serializing_if = "Option::is_none")]
    pub secondary2: Option<String>,
    #[serde(rename = "primarySpID", skip_serializing_if = "Option::is_none")]
    pub primary_sp_id: Option<i32>,
    #[serde(rename = "secondary1SpID", skip_serializing_if = "Option::is_none")]
    pub secondary1_sp_id: Option<i32>,
    #[serde(rename = "secondary2SpID", skip_serializing_if = "Option::is_none")]
    pub secondary2_sp_id: Option<i32>,
}

impl UserReplicaSet {
    pub fn new(user_id: i32, wallet: String) -> UserReplicaSet {
        UserReplicaSet {
            user_id,
            wallet,
            primary: None,
            secondary1: None,
            secondary2: None,
            primary_sp_id: None,
            secondary1_sp_id: None,
            secondary2_sp_id: None,
        }
    }
}
