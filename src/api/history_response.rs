/*
 * API
 *
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */
use fake::{Dummy, Fake};
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, Dummy)]
pub struct HistoryResponse {
    #[serde(rename = "latest_chain_block")]
    pub latest_chain_block: i32,
    #[serde(rename = "latest_indexed_block")]
    pub latest_indexed_block: i32,
    #[serde(rename = "latest_chain_slot_plays")]
    pub latest_chain_slot_plays: i32,
    #[serde(rename = "latest_indexed_slot_plays")]
    pub latest_indexed_slot_plays: i32,
    #[serde(rename = "signature")]
    pub signature: String,
    #[serde(rename = "timestamp")]
    pub timestamp: String,
    #[serde(rename = "version")]
    pub version: Box<crate::api::VersionMetadata>,
    #[serde(rename = "data", skip_serializing_if = "Option::is_none")]
    pub data: Option<Vec<crate::api::Activity>>,
}

impl HistoryResponse {
    pub fn new(
        latest_chain_block: i32,
        latest_indexed_block: i32,
        latest_chain_slot_plays: i32,
        latest_indexed_slot_plays: i32,
        signature: String,
        timestamp: String,
        version: crate::api::VersionMetadata,
    ) -> HistoryResponse {
        HistoryResponse {
            latest_chain_block,
            latest_indexed_block,
            latest_chain_slot_plays,
            latest_indexed_slot_plays,
            signature,
            timestamp,
            version: Box::new(version),
            data: None,
        }
    }
}
