/*
 * API
 *
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct Tip {
    #[serde(rename = "amount")]
    pub amount: String,
    #[serde(rename = "sender", skip_serializing_if = "Option::is_none")]
    pub sender: Option<Box<crate::api::User>>,
    #[serde(rename = "receiver", skip_serializing_if = "Option::is_none")]
    pub receiver: Option<Box<crate::api::User>>,
    #[serde(rename = "created_at")]
    pub created_at: String,
}

impl Tip {
    pub fn new(amount: String, created_at: String) -> Tip {
        Tip {
            amount,
            sender: None,
            receiver: None,
            created_at,
        }
    }
}
