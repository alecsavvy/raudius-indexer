/*
 * API
 *
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */
use fake::{Dummy, Fake};
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize, Dummy)]
pub struct MonthlyAggregatePlay {
    #[serde(rename = "totalListens", skip_serializing_if = "Option::is_none")]
    pub total_listens: Option<i32>,
    #[serde(rename = "trackIds", skip_serializing_if = "Option::is_none")]
    pub track_ids: Option<Vec<i32>>,
    #[serde(rename = "listenCounts", skip_serializing_if = "Option::is_none")]
    pub listen_counts: Option<Vec<crate::api::ListenCount>>,
}

impl MonthlyAggregatePlay {
    pub fn new() -> MonthlyAggregatePlay {
        MonthlyAggregatePlay {
            total_listens: None,
            track_ids: None,
            listen_counts: None,
        }
    }
}
