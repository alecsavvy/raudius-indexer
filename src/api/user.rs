/*
 * API
 *
 * Audius V1 API
 *
 * The version of the OpenAPI document: 1.0
 *
 * Generated by: https://openapi-generator.tech
 */
use serde::{Deserialize, Serialize};

#[derive(Clone, Debug, PartialEq, Default, Serialize, Deserialize)]
pub struct User {
    #[serde(rename = "album_count")]
    pub album_count: i32,
    #[serde(
        rename = "artist_pick_track_id",
        skip_serializing_if = "Option::is_none"
    )]
    pub artist_pick_track_id: Option<String>,
    #[serde(rename = "bio", skip_serializing_if = "Option::is_none")]
    pub bio: Option<String>,
    #[serde(rename = "cover_photo", skip_serializing_if = "Option::is_none")]
    pub cover_photo: Option<Box<crate::api::CoverPhoto>>,
    #[serde(rename = "followee_count")]
    pub followee_count: i32,
    #[serde(rename = "follower_count")]
    pub follower_count: i32,
    #[serde(
        rename = "does_follow_current_user",
        skip_serializing_if = "Option::is_none"
    )]
    pub does_follow_current_user: Option<bool>,
    #[serde(rename = "handle")]
    pub handle: String,
    #[serde(rename = "id")]
    pub id: String,
    #[serde(rename = "is_verified")]
    pub is_verified: bool,
    #[serde(rename = "location", skip_serializing_if = "Option::is_none")]
    pub location: Option<String>,
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "playlist_count")]
    pub playlist_count: i32,
    #[serde(rename = "profile_picture", skip_serializing_if = "Option::is_none")]
    pub profile_picture: Option<Box<crate::api::ProfilePicture>>,
    #[serde(rename = "repost_count")]
    pub repost_count: i32,
    #[serde(rename = "track_count")]
    pub track_count: i32,
    #[serde(rename = "is_deactivated")]
    pub is_deactivated: bool,
    #[serde(rename = "erc_wallet")]
    pub erc_wallet: String,
    #[serde(rename = "spl_wallet")]
    pub spl_wallet: String,
    #[serde(rename = "supporter_count")]
    pub supporter_count: i32,
    #[serde(rename = "supporting_count")]
    pub supporting_count: i32,
}

impl User {
    pub fn new(
        album_count: i32,
        followee_count: i32,
        follower_count: i32,
        handle: String,
        id: String,
        is_verified: bool,
        name: String,
        playlist_count: i32,
        repost_count: i32,
        track_count: i32,
        is_deactivated: bool,
        erc_wallet: String,
        spl_wallet: String,
        supporter_count: i32,
        supporting_count: i32,
    ) -> User {
        User {
            album_count,
            artist_pick_track_id: None,
            bio: None,
            cover_photo: None,
            followee_count,
            follower_count,
            does_follow_current_user: None,
            handle,
            id,
            is_verified,
            location: None,
            name,
            playlist_count,
            profile_picture: None,
            repost_count,
            track_count,
            is_deactivated,
            erc_wallet,
            spl_wallet,
            supporter_count,
            supporting_count,
        }
    }
}
