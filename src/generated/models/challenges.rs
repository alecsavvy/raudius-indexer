//! `SeaORM` Entity. Generated by sea-orm-codegen 0.11.3

use super::sea_orm_active_enums::Challengetype;
use sea_orm::entity::prelude::*;

#[derive(Clone, Debug, PartialEq, DeriveEntityModel, Eq)]
#[sea_orm(table_name = "challenges")]
pub struct Model {
    #[sea_orm(primary_key, auto_increment = false)]
    pub id: String,
    pub r#type: Challengetype,
    pub amount: String,
    pub active: bool,
    pub step_count: Option<i32>,
    pub starting_block: Option<i32>,
}

#[derive(Copy, Clone, Debug, EnumIter, DeriveRelation)]
pub enum Relation {
    #[sea_orm(has_many = "super::user_challenges::Entity")]
    UserChallenges,
}

impl Related<super::user_challenges::Entity> for Entity {
    fn to() -> RelationDef {
        Relation::UserChallenges.def()
    }
}

impl ActiveModelBehavior for ActiveModel {}
