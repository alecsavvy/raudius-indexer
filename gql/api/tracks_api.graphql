# API
# Audius V1 API
# The version of the OpenAPI document: 1.0
# Generated by OpenAPI Generator: https://openapi-generator.tech
#

# package openapi2graphql

# tracks_api

type mutation {
}

type query {
  # Gets a list of tracks using their IDs or permalinks
  # @param [String!] permalink The permalink of the track(s)
  # @param [String!] Id_ The ID of the track(s)
  # @return [TracksResponse]
  GetBulkTracks(permalink: [String!], Id_: [String!]): TracksResponse

  # Gets a track by ID
  # @param String! trackId A Track ID
  # @return [TrackResponse]
  GetTrack(trackId: String!): TrackResponse

  # Gets the top 100 trending (most popular) tracks on Audius
  # @param String! genre Filter trending to a specified genre
  # @param String! time Calculate trending over a specified time range
  # @return [TracksResponse]
  GetTrendingTracks(genre: String!, time: String!): TracksResponse

  # Gets the top 100 trending underground tracks on Audius
  # @param Int! offset The number of items to skip. Useful for pagination (page number * limit)
  # @param Int! limit The number of items to fetch
  # @return [TracksResponse]
  GetUndergroundTrendingTracks(offset: Int!, limit: Int!): TracksResponse

  # Gets the top 100 trending underground tracks on Audius using a given trending strategy version
  # @param String! version The strategy version of trending to user
  # @param Int! offset The number of items to skip. Useful for pagination (page number * limit)
  # @param Int! limit The number of items to fetch
  # @return [TracksResponse]
  GetUndergroundTrendingTracksWithVersion(version: String!, offset: Int!, limit: Int!): TracksResponse

  # Search for a track or tracks
  # @param String! Query_ The search query
  # @param String! onlyDownloadable Return only downloadable tracks
  # @return [TrackSearch]
  SearchTracks(Query_: String!, onlyDownloadable: String!): TrackSearch

  # Get the streamable MP3 file of a track
  # This endpoint accepts the Range header for streaming. https://developer.mozilla.org/en-US/docs/Web/HTTP/Range_requests
  # @param String! trackId A Track ID
  # @param String! userSignature Optional - signature from the requesting user&#39;s wallet.         This is needed to authenticate the user and verify access in case the track is premium.
  # @param String! userData Optional - data which was used to generate the optional signature argument.
  # @param String! premiumContentSignature Optional - premium content signature for this track which was previously generated by a registered DN.         This is so that track access won&#39;t have to be check; instead, we check that the user which generated the         user signature and the user for whom the DN signed are the same.
  # @return [null]
  StreamTrack(trackId: String!, userSignature: String!, userData: String!, premiumContentSignature: String!): null

}

